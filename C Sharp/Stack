using System;
//System.Array.Copy()

namespace FlashStorm
{
    public class FStack
    {
        private FSbase[] stack;
        private int length = 0;
        public FStack() {}
        public FStack(FSbase data) 
        {
            stack = new FSbase[] { data };
        }

        public void Push(FSbase data)
        {
            if (stack == null)
            {
                stack = new FSbase[] { data };
                length++;
            }
            else
            {
                if (length == 0)
                {
                    stack = new FSbase[] { data };
                    length++;
                }
                else
                {
                    stack[length - 1].Unenable();
                    FSbase[] temStack = new FSbase[length + 1];
                    Array.Copy(stack, temStack, length);
                    temStack[length] = data;
                    stack = temStack;
                    length++;
                }
            }
            data.Initial();
        }

        public void Replace(FSbase data)
        {
            data.Initial();
            if (length == 0)
            {
                FSbase[] stack = { data };
                length++;
                return;
            }
            stack[length - 1].Destory();
            stack[length - 1] = data; 
        }

        public void Pop()
        {
            if (length != 0)
            {
                length--;
                stack[length].Destory();
                FSbase[] temStack = new FSbase[length];
                Array.Copy(stack, temStack, length);
                stack = temStack;
                if (length == 0)
                    return;
                stack[length - 1].Enable();
            }
        }

        public FSbase Top()
        {
            if (length != 0)
               return stack[length - 1];
            return null;
        }

        public FSbase Last()
        {
            if (length != 0)
                return stack[0];
            return null;
        }

        public bool Empty()
        {
            return (length == 0) ? true : false;
        }

        public int Size()
        {
            return length;
        }
    }

    public class FSbase
    {
        public FSbase() {}

        public virtual void Initial() {}

        public virtual void Destory() {}

        public virtual void Unenable() {}

        public virtual void Enable() {}
    }
}
