namespace FlashStorm
{
    class FSNode<T>
    {
        public T value;
        public FSNode<T> next;

        public FSNode(T Value)
        {
            value = Value;
            next = null;
        }
    }
    class FSList<T>
    {
        FSNode<T> head;
        FSNode<T> tail;
        int length = 0;

        public FSList(T Value)
        {
            head = new FSNode<T>(Value);
            tail = head;
            length = 1;
        }

        public FSList()
        {
            head = null;
        }

        public void Add(T Value)
        {
            if (head == null)
            {
                head = new FSNode<T>(Value);
                tail = head;
            }

            else
            {
                FSNode<T> tempNode = new FSNode<T>(Value);
                tail.next = tempNode;
                tail = tempNode;
            }
            length++;
        }

        public void Remove(T Value)
        {
            if (length == 0)
                throw new InvalidOperationException("List is empty");

            if (EqualityComparer<T>.Default.Equals(head.value, Value))
            {
                if (length == 1)
                {
                    head = null;
                    tail = null;
                }
                else
                    head = head.next;
                length--;
                return;
            }

            FSNode<T> tempNode = head;

            while (tempNode != tail)
            {
                if (EqualityComparer<T>.Default.Equals(tempNode.next.value, Value))
                {
                    tempNode.next = tempNode.next.next;
                    length--;
                    return;
                }
                tempNode = tempNode.next;
            }
        }

        public int Count()
        {
            return length;
        }

        public void Debug()
        {
            if (head == null)
            {
                Console.WriteLine("This List is Null !");
                return;
            }
            else
            {
                FSNode<T> tempNode = head;
                while (tempNode != null)
                {
                    Console.WriteLine(tempNode.value);
                    tempNode = tempNode.next;
                }
            }
        }
    }
}
