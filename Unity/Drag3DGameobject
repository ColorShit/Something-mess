using UnityEngine;
using UnityEngine.EventSystems;

public class DragObj3D : MonoBehaviour, IPointerUpHandler, IPointerDownHandler, IPointerEnterHandler, IPointerExitHandler
{
    

    #region Drag Information
    public GameObject tarObj;
    public Property property;
    public Vector3 tarPos;

    //[SerializeField]
    private Vector3 initPos;
    //[SerializeField]
    private bool isDrag;
    //[SerializeField]
    public bool isShow;
    //[SerializeField]
    private float determainDistance = 0.2f;
    //[SerializeField]
    private bool isEnter;
    #endregion

    #region touch information
    public static GameObject image;
    public static GameObject tipImg;

    public string Name;

    #endregion

    public void OnPointerDown(PointerEventData eventData)
    {
        isShow = false;
        image.SetActive(false);
        if (property == Property.can)
            isDrag = true;
        else
        {
            tipImg.SetActive(true);
            Invoke("Disappear", 0.5f);
        }

    }

    public void OnPointerEnter(PointerEventData eventData)
    {
        if (!isEnter && isShow)
        {
            Vector3 temp = Camera.main.WorldToScreenPoint(gameObject.transform.position);
            image.transform.position = new Vector3(temp.x, temp.y + 64.0f, temp.z);
            image.GetComponentInChildren<TMPro.TextMeshProUGUI>().text = Name;
            image.SetActive(true);
            isEnter = true;
        }
    }

    public void OnPointerExit(PointerEventData eventData)
    {
        image.gameObject.SetActive(false);
        isEnter = false;
    }

    public void OnPointerUp(PointerEventData eventData)
    {
        isShow = true;
        isDrag = false;
        if (Vector3.Distance(tarPos, gameObject.transform.position) < determainDistance)
        {
            gameObject.transform.position = tarPos;
            tarObj.SetActive(true);
            OperateFst.dragObjRight++;
            gameObject.SetActive(false);
        }
        else
            gameObject.transform.position = initPos;
    }

    // Start is called before the first frame update
    void Start()
    {
        initPos = gameObject.transform.position;
        isShow = true;
        isEnter = false;
    }

    // Update is called once per frame
    void Update()
    {
        if (isDrag)
            gameObject.transform.position = Camera.main.ScreenToWorldPoint(new Vector3(Input.mousePosition.x, Input.mousePosition.y, 0.7f));
    }

    void Disappear()
    {
        tipImg.SetActive(false);
    }

    public enum Property
    {
        can,
        cannot
    }
}
